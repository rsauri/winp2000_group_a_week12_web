services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    ports:
      - "27017:27017" # Expose MongoDB to the host for debugging
    volumes:
      - mongo_data:/data/db # Persistent volume for MongoDB data
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s # Check health every 10 seconds
      timeout: 5s   # Timeout for each health check
      retries: 3    # Number of retries before marking as unhealthy
      start_period: 5s # Wait time before starting health checks
    networks:
      - backend_services

  go-app:
    build:
      context: .
      tags:
        - go-app:latest
    container_name: go-app
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy # Wait for MongoDB to be healthy
    environment:
      MONGO_URI: mongodb://admin:adminpassword@mongodb:27017
    ports:
      - "80:80" # Expose the Go app on port 80
    networks:
      - backend_services
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s # Check health every 10 seconds
      timeout: 5s   # Timeout for each health check
      retries: 3    # Number of retries before marking as unhealthy
      start_period: 5s # Wait time before starting health checks

volumes:
  mongo_data:

networks:
  backend_services:
    driver: bridge